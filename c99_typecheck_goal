Need to fail
01. assign to array outside the decl
02. assign to a 1d array with size a different size / not a list
03. assign to a 2d array with size a different size / not a list
04. assign to a 1d array with a differnt array&list type
05. assign to a 2d array with a differnt array&list type
06. pointer to basetype
07. pointer to another pointer
08. struct with different type
09. struct with base type
10. enum with different type
11. enum with base type
12. assign to const outside const
13. wrong basetype assign
14. deference a base/struct type
15. no main / more than one main
16. main with arguments
17. duplicate procedure name
18. procedure reutrn differnt base type or return a basetype when pointer is required
19. try to return a struct or array in procedure decl
20. call a function that does not exist
21. call a function with differnt number of arguments
22. call a function with same number of arguments but different type
23. while/for/if with non bool type
24. assign a non string type to string
25. array access a non exist variable
26. array access an non-pointer non-string type
27. array acces with an non number type index
28. double access a non 2d array typeo ( variable and element )
29. in 2d access, one or two non number is used ( variable and element )
30 and or with 1 or 2 non boolean type
31. times, divide a non number type
32. compare( > < >= <= ) two non number and non same-pointer type
33. ! with a non bool
34. - with anything that's not a number literature
35. address of 2d array type
36. deference of 5 base type and const version
37. use a undeclare variable
38. enum collection with same name
39. enum element with same name
40. declare two function with same name and same scope
41. function return a different baetype

Need to pass
01. assign to a 1d array without size a list
02. assign to a 2d array without size a list
03. assign to a 1d array with size a list with same size
04. assign to a 2d array with size a list with same size
05. pointer with same type
07. pointer with NULL
08. struct with same struct type
09. enum with same enum type
10. number type to number type
11. ( const )bool/char to ( const ) bool/char
12. deference pointer, 1d/2d array, do a assign
13. one main
14. declare a procedure
15. decl and assign multiple same type variable
16. return a NULL when pointer is required
17. return a number type when number typ eis required
18. return a base type when const is required
19. return a const type when base type is required
20. call a function with same number of args and same type
21. call a number with same number of args and const/non const type, void/pointer type
22. assign a string literature to a string variable
23. array access a pointer/string type with number as index
24. double access a 2d array type with 2 number ( variable and element )
25. and, or 2 bool/ const bool
26. pointer + number, pointer - number, number might be const
27. number > < >= <= number, pointer > < >= <. pointer
28. same type of compare( == ), const does not matter
29. == a pointer with NULL
30. ! with a bool
31. - with a number literature
32. address of anything but 2d array ( test const type )
33. deference of pointer, array and 2d array, rhs and lhs
34. declare a enum collection with type name
35. declare a enum colection without type name
36. declare variable / function with same name but in differnet scope
37. function used its argument and variable in higher scope
38. int the for, while, if, have the variable with the same name as outer scope