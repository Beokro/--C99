# CDEF file for lang

Program ==> *Outermost

Outermost:Out_enum_define ==> Enum_define
Outermost:Out_decl ==> Decl
Outermost:Out_procedure ==> Procedure
Outermost:Out_struct_define ==> Struct_Define

Enum_define ==> Primitive *Symname
Decl ==> *Primitive *Symname Type Expr
Procedure ==> Type Symname *Decl *PConttent Return_stat
Struct_define ==> Symname *Decl
Call ==> Lhs SymName *Expr

PContent:PProcedure ==> Procedure
PContent:PStat ==> Stat

Stat:Assignment ==> Lhs Expr
Stat:String_assignment ==> Lhs StringPrimitive
Stat:Function_assignment ==> Lhs  

Stat:Call ==> Lhs SymName *Expr 
Stat:IfNoElse ==> Expr Nested_block
Stat:IfWithElse ==> Expr Nested_block Nested_block
Stat:WhileLoop ==>  Expr Nested_block

Return_stat:Return ==> Expr

Type:TInteger ==>
Type:TCharacter ==>
Type:TBoolean ==>
Type:TCharPtr ==>
Type:TIntPtr ==>
Type:TString ==> Primitive


Expr:And ==> Expr Expr
Expr:Div ==> Expr Expr
Expr:Compare ==> Expr Expr
Expr:Gt ==> Expr Expr
Expr:Gteq ==> Expr Expr
Expr:Lt ==> Expr Expr
Expr:Lteq ==> Expr Expr
Expr:Minus ==> Expr Expr
Expr:Noteq ==> Expr Expr
Expr:Or ==> Expr Expr
Expr:Plus ==> Expr Expr
Expr:Times ==> Expr Expr
Expr:Not ==> Expr
Expr:Uminus ==> Expr
Expr:Ident ==> SymName
Expr:ArrayAccess ==> SymName Expr
Expr:IntLit ==> Primitive
Expr:CharLit ==> Primitive
Expr:BoolLit ==> Primitive
Expr:Deref ==> Expr

Lhs:Variable ==> SymName
Lhs:DerefVariable ==> SymName
Lhs:ArrayElement ==> SymName Expr

# these classes should not be generated automagically
SymName external "symtab.hpp"
Primitive external "primitive.hpp"
StringPrimitive external "primitive.hpp"
