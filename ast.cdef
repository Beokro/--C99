# CDEF file for lang

Program ==> *Outermost

Outermost:Out_enum_define ==> Enum_define
Outermost:Out_decl ==> Decl
Outermost:Out_procedure ==> Procedure
Outermost:Out_struct_define ==> Struct_define

Enum_define ==> Primitive Symname *Symname
#const, assign, one dimention, second dimention
Decl ==> Primitive Primitive Primitive Primitive *Symname Type *Expr
Procedure ==> Type Symname *Decl *PContent Return_stat
Struct_define ==> Symname *Decl
Call ==> Lhs SymName *Expr

PContent:PProcedure ==> Procedure
PContent:PStat ==> Stat


Init:Init_new ==> Type Symname Primitive *Expr

Stat_can_return:NStat ==> Stat
Stat_can_return:RStat ==> Return_stat

Stat:Assignment ==> Lhs Expr
Stat:String_assignment ==> Lhs StringPrimitive
Stat:Function_assignment ==> Lhs Call

Stat:Function_call ==> Call
Stat:If_no_else ==> Expr *Stat_can_return 
Stat:If_with_else ==> Expr *Stat_can_return *Stat_can_return 
Stat:While_loop ==>  Expr *Stat_can_return 
Stat:Do_while ==> Expr *Stat_can_return 

Return_stat:Return ==> Expr

Type:TInt ==>
Type:TChar ==>
Type:TBool ==>
Type:TShort ==>
Type:TVoid ==>
Type:TLong ==>
Type:TStruct ==> Symname
Type:TEnum ==> Symname

Type:TCharPtr ==>
Type:TIntPtr ==>
Type:TBoolPtr ==>
Type:TShortPtr ==>
Type:TVoidPtr ==>
Type:TLongPtr ==>


Type:TIntArray ==>
Type:TCharArray ==>
Type:TBoolArray ==>
Type:TShortArray ==>
Type:TLongArray ==>


Type:TString ==>



Expr:And ==> Expr Expr
Expr:Times ==> Expr Expr
Expr:ArithAnd ==> Expr Expr
Expr:ArithOr ==> Expr Expr
Expr:ArithXor ==> Expr Expr
Expr:Rem ==> Expr Expr
Expr:SL ==> Expr Expr
Expr:SR ==> Expr Expr
Expr:Div ==> Expr Expr
Expr:Compare ==> Expr Expr
Expr:Gt ==> Expr Expr
Expr:Gteq ==> Expr Expr
Expr:Lt ==> Expr Expr
Expr:Lteq ==> Expr Expr
Expr:Minus ==> Expr Expr
Expr:Noteq ==> Expr Expr
Expr:Or ==> Expr Expr
Expr:Plus ==> Expr Expr
Expr:Not ==> Expr
Expr:Uminus ==> Expr
Expr:Ident ==> SymName
Expr:ArrayAccess ==> SymName Expr
Expr:ArrayDoubleAccess ==> SymName Expr Expr
Expr:DotAccess ==> SymName SymName
Expr:ArrowAccess ==> SymName SymName
Expr:IntLit ==> Primitive
Expr:CharLit ==> Primitive
Expr:BoolLit ==> Primitive
Expr:NullLit ==> 
Expr:Deref ==> Expr
Expr:AddressOf ==> Lhs

Lhs:Variable ==> SymName
Lhs:DerefVariable ==> SymName
Lhs:ArrayElement ==> SymName Expr
Lhs:ArrayDoubleElement ==> SymName Expr Expr
Lhs:ArrowElement ==>  SymName SymName
Lhs:DotElement ==>  SymName SymName

# these classes should not be generated automagically
SymName external "symtab.hpp"
Primitive external "primitive.hpp"
StringPrimitive external "primitive.hpp"
